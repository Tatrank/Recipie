// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
   binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role      @default(user)
  recepies      recipe[]
  likes         like[]
  comments      comment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model category {
  id       String   @id @default(uuid())
  name     String   @unique
  recepies recipe[]
}

model grocery {
  id        String              @id @default(uuid())
  name      String              @unique
  measueres groceries_mesaure[]
}

model measure {
  id        String              @id @default(uuid())
  value     String              @unique
  groceries groceries_mesaure[]
}

model recipe {
  id                  String              @id @default(uuid())
  image_url           String              @default("https://simply-delicious-food.com/wp-content/uploads/2018/07/mexican-lunch-bowls-6.jpg")
  image_key           String?
  name                String
  description         String
  time_difficulty     String?             @default("nezadáno")
  difficulty          String?             @default("nezadáno")
  disclaimer          String
  user                User?               @relation(fields: [userId], references: [id])
  userId              String?
  published           DateTime            @default(now())
  categories          category[]
  groceries_measueres groceries_mesaure[]
  likes               like[]
  comments            comment[]
}

model like {
  id       String  @id @default(uuid())
  recipe   recipe? @relation(fields: [recipeId], references: [id])
  recipeId String?
  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
}

model comment {
  id       String  @id @default(uuid())
  text     String
  recipe   recipe? @relation(fields: [recipeId], references: [id])
  recipeId String?
  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
}

model groceries_mesaure {
  id String @id @default(uuid())

  grocery   grocery? @relation(fields: [groceryId], references: [id])
  groceryId String?
  measure   measure? @relation(fields: [measureId], references: [id])
  measureId String?
  recepies  recipe[]
}

enum Role {
  admin
  basic
  user
}
